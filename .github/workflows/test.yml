name: Test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
      - release
  pull_request:

env:
  SHORT_SHA: ${GITHUB_SHA:0:7}

jobs:
  lint:
    if: '! github.event.pull_request.draft'
    name: Lint code base
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Pre-commit
        env:
          # set the `no-commit-to-branch` to be skipped, otherwise the check fails when we merge to `master` branch
          SKIP: no-commit-to-branch
        uses: pre-commit/action@v3.0.1

  test:
    name: Run tests
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        django_app:
          - authentication
          - notifs
          - subscription
          - core
          - __flaky__
    continue-on-error: true
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Check env vars configuration
        run: |
          scripts/check_envvars.sh

      - name: Export the env variables file
        run: |
          cp .env.example .env
          sed -ri 's/^COMPOSE_FILE=(.*)/COMPOSE_FILE=\1:docker-compose.override.test.yml/g' .env
          eval $(egrep "^[^#;]" .env | xargs -d'\n' -n1 | sed -E 's/(\w+)=(.*)/export \1='"'"'\2'"'"'/g')

      - name: Login to GitHub Container Repository (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: '--allow-insecure-entitlement network.host'
          driver-opts: network=host

      - name: Docker Build app
        uses: docker/build-push-action@v6
        with:
          file: docker-app/Dockerfile
          context: docker-app
          push: false
          load: true
          allow: network.host
          network: host
          target: webserver_test
          tags: qfieldcloud-app:latest
          cache-from: type=registry,ref=ghcr.io/opengisch/qfieldcloud-app-test:buildcache
          # cache-to: type=registry,ref=ghcr.io/opengisch/qfieldcloud-app-test:buildcache,mode=max

      - name: Docker Build worker-wrapper
        uses: docker/build-push-action@v6
        with:
          file: docker-app/Dockerfile
          context: docker-app
          push: false
          load: true
          allow: network.host
          network: host
          target: worker_wrapper_runtime
          tags: qfieldcloud-worker_wrapper:latest
          cache-from: type=registry,ref=ghcr.io/opengisch/qfieldcloud-worker-wrapper:buildcache
          # cache-to: type=registry,ref=ghcr.io/opengisch/qfieldcloud-worker-wrapper:buildcache,mode=max

      - name: Docker Build qgis
        uses: docker/build-push-action@v6
        with:
          file: docker-qgis/Dockerfile
          context: docker-qgis
          push: false
          load: true
          allow: network.host
          network: host
          tags: qfieldcloud-qgis:latest
          cache-from: type=registry,ref=ghcr.io/opengisch/qfieldcloud-qgis:buildcache
          # cache-to: type=registry,ref=ghcr.io/opengisch/qfieldcloud-qgis:buildcache,mode=max

      - name: Docker Build nginx
        uses: docker/build-push-action@v6
        with:
          file: docker-nginx/Dockerfile
          context: docker-nginx
          push: false
          load: true
          allow: network.host
          tags: qfieldcloud-nginx:latest
          cache-from: type=registry,ref=ghcr.io/opengisch/qfieldcloud-nginx:buildcache
          # cache-to: type=registry,ref=ghcr.io/opengisch/qfieldcloud-nginx:buildcache,mode=max

      - name: Pull docker containers
        run: docker compose pull

      - name: Run docker containers
        run: docker compose up -d

      - name: Initial manage.py commands
        run: |
          docker compose run app python manage.py makemigrations --no-input --check
          docker compose run app python manage.py migrate
          docker compose run app python manage.py collectstatic

      - name: Run mandatory unit and integration tests
        if: matrix.django_app != '__flaky__'
        run: |
          docker compose run app python manage.py test --keepdb -v2 --exclude-tag="flaky" qfieldcloud.${{ matrix.django_app }}

      - name: Run flaky unit and integration tests
        if: matrix.django_app == '__flaky__'
        run: |
          docker compose run app python manage.py test --keepdb -v2 --tag="flaky" qfieldcloud

      - name: "failure logs"
        if: failure()
        run: |
          docker compose logs

      - name: Post Google Chat message on failure
        if: failure() && matrix.django_app != '__flaky__'
        uses: julb/action-post-googlechat-message@v1
        with:
          message: |
            Failed job run for branch `${{ github.head_ref || github.ref_name }}`, check ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} .
          gchat_webhook_url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}

      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   timeout-minutes: 30
      #   with:
      #     limit-access-to-actor: true
