# Whether the environment is in debug mode (e.g. Django debug)
# VALUES: 0 - non debug mode; 1 - debug mode
# DEFAULT: 1
DEBUG=1

# Environment where QFieldCloud runs
# VALUES: `development` - local development; `staging` - staging server; `test` - tests; `production` - production server
# DEFAULT: test
ENVIRONMENT=test

QFIELDCLOUD_HOST=localhost
DJANGO_SETTINGS_MODULE=qfieldcloud.settings
DJANGO_ALLOWED_HOSTS="localhost 127.0.0.1 0.0.0.0 app nginx"

SECRET_KEY=change_me

# Certificates

# TLS certificate filename from within the `nginx` container.
# For usage with Let's Encrypt certificate, use as:
# QFIELDCLOUD_TLS_CERT="/etc/letsencrypt/live/${QFIELDCLOUD_HOST}/fullchain.pem"
# DEFAULT: "/etc/nginx/certs/${QFIELDCLOUD_HOST}.pem"
QFIELDCLOUD_TLS_CERT="/etc/nginx/certs/${QFIELDCLOUD_HOST}.pem"

# TLS private key filename from within the `nginx` container.
# For usage with Let's Encrypt certificate, use as:
# QFIELDCLOUD_TLS_KEY="/etc/letsencrypt/live/${QFIELDCLOUD_HOST}/privkey.pem"
# DEFAULT: "/etc/nginx/certs/${QFIELDCLOUD_HOST}-key.pem"
QFIELDCLOUD_TLS_KEY="/etc/nginx/certs/${QFIELDCLOUD_HOST}-key.pem"

# TLS DF parameters filename from within the `nginx` container.
# When empty, no DF parameters are used.
# DEFAULT: "/etc/nginx/dhparams/ssl-dhparams.pem"
QFIELDCLOUD_TLS_DHPARAMS="/etc/nginx/dhparams/ssl-dhparams.pem"

LETSENCRYPT_EMAIL="test@example.com"
LETSENCRYPT_RSA_KEY_SIZE=4096
# Set to 1 if you're testing your setup to avoid hitting request limits
LETSENCRYPT_STAGING=1

STORAGE_ACCESS_KEY_ID=minioadmin
STORAGE_SECRET_ACCESS_KEY=minioadmin
STORAGE_BUCKET_NAME=qfieldcloud-local
STORAGE_REGION_NAME=

# URL to the storage endpoint either minio, or external (e.g. S3).
# The URL must be reachable both from within docker and from the host, the default value is the `bridge` docker URL.
# Read more on https://docs.docker.com/network/network-tutorial-standalone/ .
# NOTE: to use minio on windows/mac, change the value to "http://host.docker.internal:8009"
# DEFAULT: http://172.17.0.1:8009
STORAGE_ENDPOINT_URL=http://172.17.0.1:8009

# Public port to the minio API endpoint. It must match the configured port in `STORAGE_ENDPOINT_URL`.
# NOTE: active only when minio is the configured as storage endpoint. Mostly for local development.
# DEFAULT: 8009
MINIO_API_PORT=8009

# Public port to the minio browser endpoint.
# NOTE: active only when minio is the configured as storage endpoint. Mostly for local development.
# DEFAULT: 8010
MINIO_BROWSER_PORT=8010

WEB_HTTP_PORT=80
WEB_HTTPS_PORT=443

POSTGRES_USER=qfieldcloud_db_admin
POSTGRES_PASSWORD=3shJDd2r7Twwkehb
POSTGRES_DB=qfieldcloud_db
POSTGRES_HOST=db
POSTGRES_PORT=5432
# "prefer" OR "require" most of the times
POSTGRES_SSLMODE=prefer
HOST_POSTGRES_PORT=5433

GEODB_HOST=geodb
GEODB_PORT=5432
GEODB_USER=postgres
GEODB_PASSWORD="KUAa7h!G&wQEmkS3"
GEODB_DB=postgres
HOST_GEODB_PORT=5434

# Sentry DSN. Missing value disables Sentry logging. Can be found on https://opengisch.sentry.io/settings/projects/qfieldcloud/keys/ .
# DEFAULT: <NO VALUE>
SENTRY_DSN=

# Sentry sample rate between 0 and 1. Read more on https://docs.sentry.io/platforms/python/configuration/sampling/ .
# DEFAULT: 1
SENTRY_SAMPLE_RATE=1

# Release version shown on sentry. Read more on https://docs.sentry.io/product/releases/.
# DEFAULT: dev
SENTRY_RELEASE=dev

# Memcached port. Exposed only in docker-compose.local.yml
# DEFAULT: 11211
MEMCACHED_PORT=11211

LOG_DIRECTORY=/tmp
TMP_DIRECTORY=/tmp

ACCOUNT_EMAIL_VERIFICATION=optional
EMAIL_HOST=smtp4dev
EMAIL_USE_TLS=False
EMAIL_USE_SSL=False
EMAIL_PORT=25
EMAIL_HOST_USER=user
EMAIL_HOST_PASSWORD=password
DEFAULT_FROM_EMAIL="webmaster@localhost"

# Docker compose default network also used by the docker in docker workers
# If empty value, a default name will be generated at build time, for example `qfieldcloud_default`.
# QFIELDCLOUD_DEFAULT_NETWORK=""

# Admin URI. Requires slash in the end. Please use something that is hard to guess.
QFIELDCLOUD_ADMIN_URI=admin/

# QFieldCloud URL used within the worker as configuration for qfieldcloud-sdk
QFIELDCLOUD_WORKER_QFIELDCLOUD_URL=http://app:8000/api/v1/

# number of parallel workers
# DEFAULT: 1
QFIELDCLOUD_WORKER_REPLICAS=1

# QFieldCloud subscription model
# DEFAULT: subscription.Subscription
QFIELDCLOUD_SUBSCRIPTION_MODEL=subscription.Subscription

# QFieldCloud auth token expiration hours. For example 720 hours (30 days).
# DEFAULT: 720
QFIELDCLOUD_AUTH_TOKEN_EXPIRATION_HOURS=720

# QFieldCloud default timezone that is used when account has no timezone
# DEFAULT: "Europe/Zurich"
QFIELDCLOUD_DEFAULT_TIME_ZONE="Europe/Zurich"

# QFieldCloud QGIS image name to be used as worker by the `worker_wrapper`.
# If empty value, a default name will be generated at build time, for example `qfieldcloud-qgis`.
# DEFAULT: ""
# QFIELDCLOUD_QGIS_IMAGE_NAME=""

# QFieldCloud `libqfieldsync` volume path to be mounted by the `worker_wrapper` into `worker` containers.
# If empty value or invalid value, the pip installed version defined in `requirements_libqfieldsync.txt` will be used.
# DEFAULT: ""
QFIELDCLOUD_LIBQFIELDSYNC_VOLUME_PATH=""

# QFieldCloud SDK volume path to be mounted by the `worker_wrapper` into `worker` containers.
# If empty value or invalid value, the pip installed version defined in `requirements_libqfieldsync.txt` will be used.
# DEFAULT: ""
QFIELDCLOUD_QFIELDCLOUD_SDK_VOLUME_PATH=""

# The Django development port. Not used in production.
# DEFAULT: 8011
DJANGO_DEV_PORT=8011

GUNICORN_TIMEOUT_S=300
GUNICORN_MAX_REQUESTS=300
GUNICORN_WORKERS=3
GUNICORN_THREADS=3

# Not used in production.
# DEFAULT: 8012
SMTP4DEV_WEB_PORT=8012

# Not used in production.
# DEFAULT: 25
SMTP4DEV_SMTP_PORT=25

# Not used in production.
# DEFAULT: 143
SMTP4DEV_IMAP_PORT=143

# Prefix used by docker compose for each of the containers, e.g. app will be `qfieldcloud_app`
# DEFAULT: qfieldcloud
COMPOSE_PROJECT_NAME=qfieldcloud

# List of docker compose files
# DEFAULT: docker-compose.yml:docker-compose.override.local.yml
COMPOSE_FILE=docker-compose.yml:docker-compose.override.local.yml:docker-compose.override.standalone.yml

# Separator in `COMPOSE_FILE` between filenames. Required for making COMPOSE_FILE above cross-platform (do not change)
# DEFAULT: :
COMPOSE_PATH_SEPARATOR=:

# Debugpy port used for the `app` service
# DEFAULT: 5678
DEBUG_DEBUGPY_APP_PORT=5678

# Debugpy port used for the `worker_wrapper` service
# DEFAULT: 5679
DEBUG_DEBUGPY_WORKER_WRAPPER_PORT=5679
