# Generated by Django 3.2.16 on 2022-10-28 19:01

import django.core.validators
from django.db import migrations, models


def replace_with_single_storage_package_type(apps, schema_editor):
    PackageType = apps.get_model("subscription", "PackageType")
    PackageType.objects.all().delete()
    PackageType.objects.create(
        id=1,
        code="storage",
        display_name="Additional storage",
        type="storage",
        is_public=True,
        unit_amount=1000,
        unit_label="MB",
        min_quantity=0,
        max_quantity=50,
    )


def recreate_storage_package_types(apps, schema_editor):
    ExtraPackageTypeStorage = apps.get_model("subscription", "ExtraPackageTypeStorage")

    packages = ExtraPackageTypeStorage.objects.filter(
        code__in=("storage", "storage_medium"),
    )

    if packages.count() == 1:
        packages.update(
            code="storage_medium",
            display_name="Medium +1000MB",
            is_public=True,
            megabytes=1000,
        )
    else:
        ExtraPackageTypeStorage.objects.all().delete()
        ExtraPackageTypeStorage.objects.create(
            code="storage_medium",
            display_name="Medium +1000MB",
            is_public=True,
            megabytes=1000,
        )


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0058_auto_20220914_2049"),
        ("subscription", "0002_populate_plans"),
    ]

    operations = [
        migrations.RunSQL(
            migrations.RunSQL.noop, reverse_sql="SET CONSTRAINTS ALL IMMEDIATE"
        ),
        migrations.RunPython(migrations.RunPython.noop, recreate_storage_package_types),
        migrations.RunSQL(
            migrations.RunSQL.noop, reverse_sql="SET CONSTRAINTS ALL DEFERRED"
        ),
        migrations.DeleteModel(
            name="ExtraPackageTypeJobMinutes",
        ),
        migrations.DeleteModel(
            name="ExtraPackageTypeStorage",
        ),
        migrations.RenameModel(
            old_name="ExtraPackage",
            new_name="Package",
        ),
        migrations.RenameModel(
            old_name="ExtraPackageType",
            new_name="PackageType",
        ),
        migrations.AlterField(
            model_name="plan",
            name="user_type",
            field=models.PositiveSmallIntegerField(
                choices=[(1, "Person"), (2, "Organization"), (3, "Team")], default=1
            ),
        ),
        migrations.AddField(
            model_name="packagetype",
            name="max_quantity",
            field=models.PositiveIntegerField(default=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="packagetype",
            name="min_quantity",
            field=models.PositiveIntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="packagetype",
            name="type",
            field=models.CharField(
                choices=[("storage", "Storage")],
                default="storage",
                max_length=100,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="packagetype",
            name="unit_amount",
            field=models.PositiveIntegerField(default=1000),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="packagetype",
            name="unit_label",
            field=models.CharField(max_length=100, blank=True, null=True, default="MB"),
            preserve_default=False,
        ),
        migrations.RunSQL(
            "SET CONSTRAINTS ALL IMMEDIATE", reverse_sql=migrations.RunSQL.noop
        ),
        migrations.RunPython(
            replace_with_single_storage_package_type, migrations.RunPython.noop
        ),
        migrations.RunSQL(
            "SET CONSTRAINTS ALL DEFERRED", reverse_sql=migrations.RunSQL.noop
        ),
        migrations.AlterField(
            model_name="packagetype",
            name="type",
            field=models.CharField(
                choices=[("storage", "Storage")],
                default="storage",
                max_length=100,
                unique=True,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="package",
            name="quantity",
            field=models.PositiveIntegerField(
                validators=[django.core.validators.MinValueValidator(1)]
            ),
        ),
        migrations.AlterField(
            model_name="package",
            name="account",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="packages",
                to="core.useraccount",
            ),
        ),
    ]
