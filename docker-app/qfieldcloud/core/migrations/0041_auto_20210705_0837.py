# Generated by Django 3.2.5 on 2021-07-05 08:37

from django.db import migrations, models

from qfieldcloud.core.utils import get_qgis_project_file


class Migration(migrations.Migration):
    def forwards_job_feedback_func(apps, schema_editor):
        Job = apps.get_model("core", "Job")
        ExportJob = apps.get_model("core", "ExportJob")
        ProcessProjectfileJob = apps.get_model("core", "ProcessProjectfileJob")

        for export_job in ExportJob.objects.all():
            job = Job.objects.get(id=export_job.job_ptr_id)
            job.feedback = {
                "legacy": {
                    "exportlog": export_job.exportlog,
                }
            }
            job.save()

        for process_projectfile_job in ProcessProjectfileJob.objects.all():
            job = Job.objects.get(id=process_projectfile_job.job_ptr_id)
            job.feedback = process_projectfile_job.feedback_old
            job.save()

    def backwards_job_feedback_func(apps, schema_editor):
        Job = apps.get_model("core", "Job")
        ExportJob = apps.get_model("core", "ExportJob")
        ProcessProjectfileJob = apps.get_model("core", "ProcessProjectfileJob")

        for export_job in ExportJob.objects.all():
            job = Job.objects.get(id=export_job.job_ptr_id)

            if job.feedback and job.feedback.get("legacy", {}).get("exportlog"):
                export_job.exportlog = job.feedback.get("legacy").get("exportlog")
                export_job.save()

        for process_projectfile_job in ProcessProjectfileJob.objects.all():
            job = Job.objects.get(id=process_projectfile_job.job_ptr_id)
            process_projectfile_job.feedback_old = job.feedback
            process_projectfile_job.save()

    def forwards_find_project_filename_func(apps, schema_editor):
        Project = apps.get_model("core", "Project")

        for project in Project.objects.all():
            project.project_filename = get_qgis_project_file(project.id)
            project.save()

    dependencies = [
        ("core", "0040_auto_20210630_1212"),
    ]

    operations = [
        migrations.AddField(
            model_name="project",
            name="project_filename",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="project",
            name="thumbnail_uri",
            field=models.CharField(
                blank=True, max_length=255, verbose_name="Thumbnail Picture URI"
            ),
        ),
        migrations.AddField(
            model_name="applyjobdelta",
            name="modified_pk",
            field=models.TextField(null=True),
        ),
        migrations.CreateModel(
            name="ProcessProjectfileJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.job",
                    ),
                ),
                ("feedback", models.JSONField(null=True)),
            ],
            options={
                "verbose_name": "Job: process QGIS project file",
                "verbose_name_plural": "Jobs: process QGIS project file",
            },
            bases=("core.job",),
        ),
        migrations.AlterField(
            model_name="job",
            name="type",
            field=models.CharField(
                choices=[
                    ("export", "Export"),
                    ("delta_apply", "Delta Apply"),
                    ("process_projectfile", "Process QGIS Project File"),
                ],
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name="job",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("queued", "Queued"),
                    ("started", "Started"),
                    ("finished", "Finished"),
                    ("stopped", "Stopped"),
                    ("failed", "Failed"),
                ],
                default="pending",
                max_length=32,
            ),
        ),
        # add feedback field for all jobs
        migrations.RenameField(
            model_name="processprojectfilejob",
            old_name="feedback",
            new_name="feedback_old",
        ),
        migrations.AddField(
            model_name="job",
            name="feedback",
            field=models.JSONField(null=True),
        ),
        migrations.RunPython(forwards_job_feedback_func, backwards_job_feedback_func),
        migrations.RemoveField(
            model_name="exportjob",
            name="exportlog",
        ),
        migrations.RemoveField(
            model_name="processprojectfilejob",
            name="feedback_old",
        ),
        # / add feedback field for all jobs
        # / add feedback field for all jobs
        migrations.RunPython(
            forwards_find_project_filename_func, migrations.RunPython.noop
        ),
        # rename project.exports to project.jobs
        migrations.AlterField(
            model_name="job",
            name="project",
            field=models.ForeignKey(
                on_delete=models.deletion.CASCADE,
                related_name="jobs",
                to="core.project",
            ),
        ),
        # / rename project.exports to project.jobs
    ]
