# Generated by Django 4.2.19 on 2025-08-11 19:02

from django.db import migrations, models

import qfieldcloud.core.models
import qfieldcloud.core.validators


def can_restore_file_attr_file_storage(apps, schema_editor):
    FileVersion = apps.get_model("filestorage", "FileVersion")

    file_version_qs = (
        FileVersion.objects.values("file_id")
        .annotate(
            count=models.Count("file_storage", distinct=True),
        )
        .filter(count__gt=1)
    )

    # Ensure that all `FileVersion` referencing the same `File` have the same `file_storage`.
    if file_version_qs.exists():
        raise ValueError(
            "Inconsistent file_storage across FileVersions for the same File. "
            "Please ensure all versions of a file have the same storage."
        )


class Migration(migrations.Migration):
    dependencies = [
        ("filestorage", "0004_alter_fileversion_size"),
    ]

    operations = [
        migrations.AddField(
            model_name="fileversion",
            name="file_storage",
            field=models.CharField(
                default=qfieldcloud.core.models.get_project_file_storage_default,
                editable=False,
                help_text="Which file storage provider should be used for storing the file.",
                max_length=100,
                validators=[qfieldcloud.core.validators.file_storage_name_validator],
                verbose_name="File storage",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="file",
            name="file_storage",
            field=models.CharField(
                default=qfieldcloud.core.models.get_project_file_storage_default,
                editable=False,
                help_text="Which file storage provider should be used for storing the file.",
                max_length=100,
                validators=[qfieldcloud.core.validators.file_storage_name_validator],
                verbose_name="File storage",
                null=True,
            ),
        ),
        migrations.RunSQL(
            """
                UPDATE filestorage_fileversion
                SET file_storage = filestorage_file.file_storage
                FROM filestorage_file
                WHERE filestorage_fileversion.file_id = filestorage_file.id
            """,
            """
                UPDATE filestorage_file
                SET file_storage = tbl.file_storage
                FROM
                    (
                        SELECT
                            filestorage_file.id,
                            filestorage_fileversion.file_storage
                        FROM
                            filestorage_file
                            LEFT JOIN filestorage_fileversion ON filestorage_fileversion.id = filestorage_file.latest_version_id
                    ) tbl
                WHERE filestorage_file.id = tbl.id
            """,
        ),
        migrations.RunPython(
            migrations.RunPython.noop, can_restore_file_attr_file_storage
        ),
        migrations.AlterField(
            model_name="fileversion",
            name="file_storage",
            field=models.CharField(
                default=qfieldcloud.core.models.get_project_file_storage_default,
                editable=False,
                help_text="Which file storage provider should be used for storing the file.",
                max_length=100,
                validators=[qfieldcloud.core.validators.file_storage_name_validator],
                verbose_name="File storage",
                null=False,
            ),
        ),
        migrations.RemoveField(
            model_name="file",
            name="file_storage",
        ),
    ]
